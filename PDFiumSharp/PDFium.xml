<?xml version="1.0" encoding="utf-8" ?>
<Documentation>
	<!-- https://pdfium.googlesource.com/pdfium/+/master/public/fpdfview.h -->
	<FPDF_InitLibrary>
		<summary>Initialize the PDFium library</summary>
		<remarks>
			Convenience function to call <see cref="FPDF_InitLibraryWithConfig"/> for
			backwards comatibility purposes.
		</remarks>
	</FPDF_InitLibrary>

	<FPDF_InitLibraryWithConfig>
		<summary>Initialize the PDFium library</summary>
		<remarks>
			You have to call this function before you can call any PDF
			processing functions.
		</remarks>
	</FPDF_InitLibraryWithConfig>

	<FPDF_DestroyLibrary>
		<summary>Release all resources allocated by the PDFium library.</summary>
		<remarks>
			You can call this function to release all memory blocks allocated by
			the library.
			After this function is called, you should not call any PDF
			processing functions.
		</remarks>
	</FPDF_DestroyLibrary>

	<FPDF_LoadDocument>
		<summary>Open and load a PDF document.</summary>
		<param name="file_path">Path to the PDF file (including extension).</param>
		<param name="password">
			A string used as the password for the PDF file.
			If no password is needed, <see cref="string.Empty"/> or <c>null</c> can be used.
		</param>
		<returns>A handle to the loaded document, or NULL on failure.</returns>
		<remarks>
			Loaded document can be closed by <see cref="FPDF_CloseDocument"/>.
			If this function fails, you can use <see cref="FPDF_GetLastError"/> to retrieve
			the reason why it failed.
		</remarks>
	</FPDF_LoadDocument>

	<FPDF_LoadMemDocument>
		<summary>Open and load a PDF document from memory.</summary>
		<param name="data_buf">Pointer to a buffer containing the PDF document.</param>
		<param name="size">Number of bytes in the PDF document.</param>
		<param name="password">
			A string used as the password for the PDF file.
			If no password is needed, <see cref="string.Empty"/> or <c>null</c> can be used.
		</param>
		<returns>A handle to the loaded document, or NULL on failure.</returns>
		<remarks>
			<para>
				The memory buffer must remain valid when the document is open.
				The loaded document can be closed by <see cref="FPDF_CloseDocument"/>.
				If this function fails, you can use <see cref="FPDF_GetLastError"/> to retrieve
				the reason why it failed.       
			</para>
			<para>
				If PDFium is built with the XFA module, the application should call
				<see cref="FPDF_LoadXFA"/> function after the PDF document loaded to support XFA
				fields defined in the fpdfformfill.h file.
			</para>
		</remarks>
	</FPDF_LoadMemDocument>

	<FPDF_LoadCustomDocument>
		<summary>Load PDF document from a custom access descriptor.</summary>
		<param name="fileRead">A structure for accessing the file.</param>
		<param name="password">Optional password for decrypting the PDF file.</param>
		<returns>A handle to the loaded document, or NULL on failure.</returns>
		<remarks>
			<para>
				The application must keep the file resources valid until the PDF
				document is closed.
				The loaded document can be closed with FPDF_CloseDocument.
			</para>
			<para>
				If PDFium is built with the XFA module, the application should call
				<see cref="FPDF_LoadXFA"/> function after the PDF document loaded to support XFA
				fields defined in the fpdfformfill.h file.
			</para>
		</remarks>
	</FPDF_LoadCustomDocument>

	<FPDF_GetFileVersion>
		<summary>Get the file version of the given PDF document.</summary>
		<param name="doc">Handle to a document.</param>
		<param name="fileVersion">The PDF file version. File version: 14 for 1.4, 15 for 1.5, ...</param>
		<returns>True if succeeds, false otherwise.</returns>
		<remarks>
			If the document was created by <see cref="FPDF_CreateNewDocument"/>,
			then this function will always fail.
		</remarks>
	</FPDF_GetFileVersion>

	<FPDF_GetLastError>
		<summary>Get last error code when a function fails.</summary>
		<remarks>
			If the previous SDK call succeeded, the return value of this
			function is not defined.
		</remarks>
	</FPDF_GetLastError>

	<FPDF_GetDocPermissions></FPDF_GetDocPermissions>

	<FPDF_GetSecurityHandlerRevision></FPDF_GetSecurityHandlerRevision>

	<FPDF_GetPageCount>
		<summary>Get total number of pages in the document.</summary>
		<param name="document">Handle to document.</param>
		<returns>Total number of pages in the document.</returns>
	</FPDF_GetPageCount>

	<FPDF_LoadPage>
		<summary>Load a page inside the document.</summary>
		<param name="document">Handle to document.</param>
		<param name="page_index">Zero-based index of the page.</param>
		<returns>A handle to the loaded page, or NULL if page load fails.</returns>
		<remarks>The loaded page can be closed using FPDF_ClosePage.</remarks>
	</FPDF_LoadPage>

	<FPDF_GetPageWidth>
		<summary>Get page width.</summary>
		<param name="page">Handle to the page.</param>
		<returns>
			Page width (excluding non-displayable area) measured in points.
			One point is 1/72 inch (around 0.3528 mm).
		</returns>
	</FPDF_GetPageWidth>

	<FPDF_GetPageHeight>
		<summary>Get page height.</summary>
		<param name="page">Handle to the page.</param>
		<returns>
			Page height (excluding non-displayable area) measured in points.
			One point is 1/72 inch (around 0.3528 mm)
		</returns>
	</FPDF_GetPageHeight>

	<FPDF_GetPageSizeByIndex>
		<summary>Get the size of the page at the given index.</summary>
		<param name="document">Handle to document.</param>
		<param name="index">Zero-based index of the page.</param>
		<param name="width">Pointer to a double to receive the page width (in points).</param>
		<param name="height">Pointer to a double to receive the page height (in points).</param>
	</FPDF_GetPageSizeByIndex>

	<FPDF_RenderPageBitmap>
		<summary>Render contents of a page to a device independent bitmap.</summary>
		<param name="bitmap">
			Handle to the device independent bitmap (as the
			output buffer). The bitmap handle can be created
			by <see cref="FPDFBitmap_Create"/>.
		</param>
		<param name="page">Handle to the page.</param>
		<param name="start_x">Left pixel position of the display area in bitmap coordinates.</param>
		<param name="start_y">Top pixel position of the display area in bitmap coordinates.</param>
		<param name="size_x">Horizontal size (in pixels) for displaying the page.</param>
		<param name="size_y">Vertical size (in pixels) for displaying the page.</param>
		<param name="rotate">Page orientation.</param>
		<param name="flags">
			<see cref="RenderingFlags.None"/> for normal display, or combination of the Page
			Rendering flags defined above. With the <see cref="RenderingFlags.Annotations"/>
			flag, it renders all annotations that do not require
			user-interaction, which are all annotations except
			widget and popup annotations.
		</param>
	</FPDF_RenderPageBitmap>

	<FPDF_RenderPageBitmapWithMatrix>
		<summary>Render contents of a page to a device independent bitmap.</summary>
		<param name="bitmap">
			Handle to the device independent bitmap (as the
			output buffer). The bitmap handle can be created
			by <see cref="FPDFBitmap_Create"/>.
		</param>
		<param name="page">Handle to the page.</param>
		<param name="matrix">The transform matrix.</param>
		<param name="clipping">The rect to clip to.</param>
		<param name="flags">
			<see cref="RenderingFlags.None"/> for normal display, or combination of the Page
			Rendering flags defined above. With the <see cref="RenderingFlags.Annotations"/>
			flag, it renders all annotations that do not require
			user-interaction, which are all annotations except
			widget and popup annotations.
		</param>
	</FPDF_RenderPageBitmapWithMatrix>

	<FPDF_ClosePage>
		<summary>Close a loaded PDF page.</summary>
		<param name="page">Handle to the loaded page.</param>
	</FPDF_ClosePage>

	<FPDF_CloseDocument>
		<summary>Close a loaded PDF document.</summary>
		<param name="document">Handle to the loaded document.</param>
	</FPDF_CloseDocument>

	<FPDF_DeviceToPage></FPDF_DeviceToPage>

	<FPDF_PageToDevice></FPDF_PageToDevice>
	
	<FPDFBitmap_Create>
		<summary>Create a device independent bitmap (FXDIB).</summary>
		<param name="width">The number of pixels in width for the bitmap. Must be greater than 0. </param>
		<param name="height">The number of pixels in height for the bitmap. Must be greater than 0.</param>
		<param name="hasAlpha">A value indicating whether the alpha channel is used.</param>
		<returns>The bitmap handle, or <see cref="IntPtr.Zero"/> if parameter error or out of memory.</returns>
		<remarks>
			The bitmap always uses 4 bytes per pixel. The first byte is always
			double word aligned.
			
			The byte order is BGRx (the last byte unused if no alpha channel) or BGRA.
			
			The pixels in a horizontal line are stored side by side, with the
			left most pixel stored first (with lower memory address).
			Each line uses width * 4 bytes.
			
			Lines are stored one after another, with the top most line stored
			first. There is no gap between adjacent lines.
			
			This function allocates enough memory for holding all pixels in the
			bitmap, but it doesn't initialize the buffer. Applications can use
			<see cref="FPDFBitmap_FillRect"/> to fill the bitmap using any color.
		</remarks>
	</FPDFBitmap_Create>

	<FPDFBitmap_CreateEx>
		<summary>Create a device independent bitmap (FXDIB).</summary>
		<param name="width">The number of pixels in width for the bitmap. Must be greater than 0. </param>
		<param name="height">The number of pixels in height for the bitmap. Must be greater than 0.</param>
		<param name="first_scan">
			A pointer to the first byte of the first line if
			using an external buffer. If this parameter is <see cref="IntPtr.Zero"/>
			then the a new buffer will be created.
		</param>
		<param name="stride">Number of bytes for each scan line, for external buffer only.</param>
		<returns>The bitmap handle, or <see cref="IntPtr.Zero"/> if parameter error or out of memory.</returns>
		<remarks>
			Similar to <see cref="FPDFBitmap_Create"/> function, but allows for more formats
			and an external buffer is supported. The bitmap created by this
			function can be used in any place that a handle is required.
			
			If an external buffer is used, then the application should destroy
			the buffer by itself. <see cref="FPDFBitmap_Destroy"/> function will not destroy
			the buffer.
		</remarks>
	</FPDFBitmap_CreateEx>

	<FPDFBitmap_FillRect>
		<summary>Fill a rectangle in a bitmap.</summary>
		<param name="bitmap">The handle to the bitmap.</param>
		<param name="left">The left position. Starting from 0 at the left-most pixel.</param>
		<param name="top">The top position. Starting from 0 at the top-most line.</param>
		<param name="width">Width in pixels to be filled.</param>
		<param name="height">Height in pixels to be filled.</param>
		<remarks>
			This function sets the color and (optionally) alpha value in the
			specified region of the bitmap.
			
			NOTE: If the alpha channel is used, this function does NOT
			composite the background with the source color, instead the
			background will be replaced by the source color and the alpha.
			
			If the alpha channel is not used, the alpha parameter is ignored.
		</remarks>
	</FPDFBitmap_FillRect>

	<FPDFBitmap_GetBuffer>
		<summary>Get data buffer of a bitmap.</summary>
		<param name="bitmap">Handle to the bitmap as returned by <see cref="FPDFBitmap_Create"/>.</param>
		<returns>The pointer to the first byte of the bitmap buffer.</returns>
		<remarks>
			The stride may be more than width * number of bytes per pixel
			
			Applications can use this function to get the bitmap buffer pointer,
			then manipulate any color and/or alpha values for any pixels in the bitmap.
			
			The data is in BGRA format. Where the A maybe unused if alpha was
			not specified.
		</remarks>
	</FPDFBitmap_GetBuffer>

	<FPDFBitmap_GetWidth>
		<summary>Get width of a bitmap.</summary>
		<param name="bitmap">Handle to the bitmap as returned by <see cref="FPDFBitmap_Create"/>.</param>
		<returns>The width of the bitmap in pixels.</returns>
	</FPDFBitmap_GetWidth>

	<FPDFBitmap_GetHeight>
		<summary>Get height of a bitmap.</summary>
		<param name="bitmap">Handle to the bitmap as returned by <see cref="FPDFBitmap_Create"/>.</param>
		<returns>The height of the bitmap in pixels.</returns>
	</FPDFBitmap_GetHeight>

	<FPDFBitmap_GetStride>
		<summary>Get number of bytes for each line in the bitmap buffer.</summary>
		<param name="bitmap">Handle to the bitmap as returned by <see cref="FPDFBitmap_Create"/>.</param>
		<returns>The number of bytes for each line in the bitmap buffer.</returns>
		<remarks>The stride may be more than width * number of bytes per pixel.</remarks>
	</FPDFBitmap_GetStride>

	<FPDFBitmap_Destroy>
		<summary>Destroy a bitmap and release all related buffers.</summary>
		<param name="bitmap">Handle to the bitmap as returned by <see cref="FPDFBitmap_Create"/>.</param>
		<remarks>
			This function will not destroy any external buffers provided when
			the bitmap was created.
		</remarks>
	</FPDFBitmap_Destroy>

	<FPDF_VIEWERREF_GetPrintScaling>
		<summary>Whether the PDF document prefers to be scaled or not.</summary>
		<param name="document">Handle to the loaded document.</param>
	</FPDF_VIEWERREF_GetPrintScaling>

	<FPDF_VIEWERREF_GetNumCopies>
		<summary>Returns the number of copies to be printed.</summary>
		<param name="document">Handle to the loaded document.</param>
		<returns>The number of copies to be printed.</returns>
	</FPDF_VIEWERREF_GetNumCopies>

	<FPDF_VIEWERREF_GetPrintPageRange>
		<summary>Page numbers to initialize print dialog box when file is printed.</summary>
		<param name="document">Handle to the loaded document.</param>
		<returns>The print page range to be used for printing.</returns>
	</FPDF_VIEWERREF_GetPrintPageRange>

	<FPDF_VIEWERREF_GetDuplex>
		<summary>Returns the paper handling option to be used when printing from the print dialog.</summary>
		<param name="document">Handle to the loaded document.</param>
		<returns>The paper handling option to be used when printing.</returns>
	</FPDF_VIEWERREF_GetDuplex>

	<FPDF_VIEWERREF_GetName>
		<summary>Gets the contents for a viewer ref, with a given key. The value must be of type "name".</summary>
		<param name="document">Handle to the loaded document.</param>
		<param name="key">Name of the key in the viewer pref dictionary.</param>
		<param name="buffer">A string to write the contents of the key to.</param>
		<param name="length">Length of the buffer.</param>
		<returns>
			The number of bytes in the contents, including the NULL terminator.
			Thus if the return value is 0, then that indicates an error, such
			as when |document| is invalid or |buffer| is NULL. If |length| is
			less than the returned length, or |buffer| is NULL, |buffer| will
			not be modified.
		</returns>
	</FPDF_VIEWERREF_GetName>

	<FPDF_CountNamedDests>
		<summary>Get the count of named destinations in the PDF document.</summary>
		<param name="document">Handle to the loaded document.</param>
		<returns>The count of named destinations.</returns>
	</FPDF_CountNamedDests>

	<FPDF_GetNamedDestByName>
		<summary>Get a the destination handle for the given name.</summary>
		<param name="document">Handle to the loaded document.</param>
		<param name="name">The name of a destination.</param>
		<returns>The handle to the destination.</returns>
	</FPDF_GetNamedDestByName>
	
	<!-- https://pdfium.googlesource.com/pdfium/+/master/public/fpdf_edit.h -->
	<FPDF_CreateNewDocument>
		<summary>Create a new PDF document.</summary>
		<returns>Returns a handle to a new document, or NULL on failure.</returns>
	</FPDF_CreateNewDocument>

	<FPDFPage_New>
		
	</FPDFPage_New>

	<FPDFPage_Delete>
		
	</FPDFPage_Delete>


	<FPDF_ImportPages>
		
	</FPDF_ImportPages>

	<FPDF_SaveAsCopy>
		
	</FPDF_SaveAsCopy>

	<FPDF_SaveWithVersion>
		
	</FPDF_SaveWithVersion>

	<FPDFPage_GetRotation>
		
	</FPDFPage_GetRotation>

	<FPDFPage_SetRotation>
		
	</FPDFPage_SetRotation>
</Documentation>